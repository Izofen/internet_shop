
def save_sql                (message_info,name,sql,limit,offset,back):
    import iz_bot
    namebot    = message_info.setdefault('namebot','')
    db,cursor = iz_bot.connect (namebot)
    sql = "INSERT INTO data_sql (name,data) VALUES (%s,%s)".format ()
    sql_save = (name,sql,limit,offset,back)
    result = cursor.execute(sql,sql_save)
    db.commit()    
    lastid = cursor.lastrowid
    return lastid

def get_sql                 (message_info,id_sql):
    import iz_bot
    namebot    = message_info.setdefault('namebot','')
    db,cursor = iz_bot.connect (namebot)
    sql = "select id,sql,ask,limit,offset,back from data_sql where id = {}".format(id_sql)
    cursor.execute(sql)
    data = cursor.fetchall()
    for rec in data:
        id,sql,ask,limit,offset,back = rec.values() 
    return sql,ask,limit,offset,back  

def send_message            (user_id,message_out):
    import requests
    params = {}
    params['chat_id']    = user_id                  
    params['text']       = message_out
    params['parse_mode'] = 'HTML'
    token = '6442674165:AAFdJo3xAcxSvCknaeqmixgSsWUbO6Szk7s'
    url   = 'https://api.telegram.org/bot{0}/{1}'.format(token, 'sendMessage')
    print ('[+] url',url)
    resp = requests.post(url, params) 
    answer = resp.json()
    print ('[+]üëß------------------------------------------------------------ [–û—Ç–≤–µ—Ç sendMessage] -------------------------------------------------------üëß[+]')
    print ( answer)
    print ('[+]üëß-------------------------------------------------------------- [–û—Ç–≤–µ—Ç –û—Ç–ø—Ä–∞–≤–∫–∏] --------------------------------------------------------üëß[+]') 
    print ('') 
      
def complite_key            (message_info,id_sql,sql,ask,limit,offset,back,metka):                                                  ###  –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑ –∫–Ω–æ–ø–æ–∫ –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –Ω–∞–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
    import iz_bot
    import json
    namebot             = message_info.setdefault('namebot','')
    db,cursor           = iz_bot.connect (namebot)
    sql_save            = (limit,offset,ask)
    cursor.execute(sql,sql_save)
    data = cursor.fetchall()
    key_array = []
    for rec in data: 
        id,info = rec.values()  
        command =  iz_bot.build_jsom ({'o':metka,'i':id,'s':id_sql})
        key_array.append ([[info,command],['',''],['','']])  
    #command      =  iz_bot.build_jsom ({'o':'next','s':id_code})
    #name_key     = set_name_key (message_info,'–ö–Ω–æ–ø–∫–∞ –¥–∞–ª–µ–µ')        
    #key_array.append ([[name_key,command],['',''],['','']]) 
    if back != '':                                                                                                                  ### –ï—Å–ª–∏ –Ω–∞–º –ø–µ—Ä–µ–¥–∞–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–∞–∫ –≤–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥ –∑–∞–Ω–æ—Å–∏–º –µ–µ
        name_key = set_name_key (message_info,'–ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥') 
        command  = iz_bot.build_jsom ({'o':'back','s':id_sql,'b':back})
        key_array.append ([[name_key,command],['',''],['','']]) 
    return key_array   
  
def get_message             (message_info,name):
    namebot     = message_info.setdefault ('namebot')
    db,cursor   = connect (namebot) 
    data_message = {}
    sql = "select id,name,info from message where name = '–ò–º—è' and info = '{}' ;".format (name)
    cursor.execute(sql)
    results = cursor.fetchall()    
    id = 0
    for row in results:
        id,name,info = row.values() 
        if id != 0:
            sql = "select id,name,info from message where data_id = {};".format (id)
            cursor.execute(sql)
            results = cursor.fetchall()    
            for row in results:
                id,name,info = row.values() 
                data_message[name] = info  
    return data_message 
  
def get_message_tovar       (message_info,status_input,setting_bot,id_list,info_tovar):                                             ###  –§–æ—Ä–º–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä–∞    
    message = get_message (message_info,"–®–∞–±–ª–æ–Ω —Ç–æ–≤–∞—Ä–∞")
    key     = {}
    return message,key
   
##################################################################################################################################################################################################    
   
def print_operator          (message_info,status_input,setting_bot,operation,id_list,id_sql,id_back):                               ###  –ü–µ—á–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –æ–ø–µ—Ä–∞—Ç–æ—Ä –≤ json
    pass
   
def executing_operator      (message_info,status_input,setting_bot,operation,id_list,id_sql,id_back):                               ###  –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –æ–ø–µ—Ä–∞—Ç–æ—Ä –≤ json
    
    if operation == 'catat':                                                                                                        ###  –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –≤ —Å–ø–∏—Å–∫–µ
        ### id_list - id —Ç–æ–≤–∞—Ä–∞ –≤ —Å–ø–∏—Å–∫–µ
        ### id_sql  - id sql –∑–∞–ø—Ä–æ—Å–∞
        ### –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –∫–æ–¥ —Ç–æ–≤–∞—Ä–∞ –∏ –∫–æ–¥ –∑–∞–ø—Ä–æ—Å–∞ sql. –¢–µ–ø–µ—Ä—å –Ω–∞–º –Ω—É–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ. 
        ### –®–∞–≥ –Ω–∞–∑–∞–¥ —ç—Ç–æ –≤–æ–∑–≤—Ä–∞—à–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫, –∞ –∏–º–µ–Ω–Ω–æ id_sql.
        
        info_tovar = get_info_tovar (message_info,status_input,setting_bot,id_list)                                                 ###  –ü–æ–ª—É—á–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –º–æ–∂–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—Å—è –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –±–∞–∑ –∏ —Ç–∞–±–ª–∏—Ü.
        if info_tovar['catalog'] == 1:                                                                                              ###  –≠—Ç–æ –∫–∞—Ç–∞–ª–æ–≥ –≤—ã–≤–æ–¥–∏–º. –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑–∞–Ω –¥–∞–Ω–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ 
            sql      = "select id,`info` from `service` where %s limit %s offset %s"
            ask      = "name_catalog = {} ".format (info_tovar['name_catalog'])
            limit    = 10
            offset   = 0            
            back     = id_sql                                                                                                       ###  –ü–µ—Ä–µ–¥–∞–µ–º –Ω–æ–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞
            id_sql   = save_sql     (message_info,"–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤",sql,limit,offset,back)                                           ###  –ú—ã –¥–µ–ª–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ, —Ç–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∏–≤ –Ω–æ–º–µ—Ä –≤—ã–±–æ—Ä–∞, –º–æ–∂–µ–º —Ä–∞—Å—á–∏—Ç–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è            
            key_list = complite_key (message_info,id_sql,sql,ask,limit,offset,back,'catat')
        if info_tovar['catalog'] == 0:                                                                                              ###  –≠—Ç–æ —Ç–æ–≤–∞—Ä –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ
            message,key = get_message_tovar (message_info,status_input,setting_bot,id_list,info_tovar)
            
    if operation == 'back':                                                                                                         ###  –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –≤–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥ 
        sql,ask,limit,offset,back = get_sql (message_info,id_sql)
        id_sql                    = id_sql         
        key_list                  = complite_key (message_info,id_sql,sql,ask,limit,offset,back,'catat')
        
def executing_program_json  (message_info,status_input,setting_bot):                                                                ###  –†–∞–∑–±–æ—Ä –∫–æ–º–∞–Ω–¥—ã –æ–ø–µ—Ä–∞—Ç–æ—Ä –≤ json
    import iz_bot                                                                                                                   ###  –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã
    import json
    callback        = message_info.setdefault   ('callback','')                                                                     ###  –ò–º—è –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏ 
    json_string     = iz_bot.change_back        (callback.replace('i_',''))
    data_json       = json.loads                (json_string)
    operation       = data_json.setdefault      ('o','')                                                                            ###  –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π  –≤ json
    id_list         = data_json.setdefault      ('i','')                                                                            ###  –ü–∞—Ä–∞–º–µ—Ç—Ä id –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π       –≤ json    
    id_sql          = data_json.setdefault      ('s','')                                                                            ###  –ü–∞—Ä–∞–º–µ—Ç—Ä id_sql –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π   –≤ json 
    id_back         = data_json.setdefault      ('b','')                                                                            ###  –ü–∞—Ä–∞–º–µ—Ç—Ä id_back –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π  –≤ json
    print_operator      (message_info,status_input,setting_bot,operation,id_list,id_sql,id_back)                                    ###  –ü–µ—á–∞—Ç–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ  –≤ json
    executing_operator  (message_info,status_input,setting_bot,operation,id_list,id_sql,id_back)                                    ###  –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –≤ json
    
##################################################################################################################################################################################################   
   
def print_status            (message_info,status_input,setting_bot):
    pass
    
def executing_admin         (message_info,status_input,setting_bot):
    pass
    
def testing_double          (message_info,status_input,setting_bot):
    pass
    
def testing_blocking        (message_info,status_input,setting_bot):
    pass
    
def save_info_refer         (message_info,status_input,setting_bot):
    pass
    
def save_info_user          (message_info,status_input,setting_bot):
    pass
    
def save_message_user       (message_info,status_input,setting_bot):
    pass
    
def executing_status        (message_info,status_input,setting_bot):
    if status_input.setdefault('–°—Ç–∞—Ç—É—Å','') == '–í–≤–æ–¥ –≥–æ—Ä–æ–¥–∞':                                                                       ###  –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å—Ç–∞—Ç—É—Å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        pass
        
def executing_message       (message_info,status_input,setting_bot):
    if message_in   == '–ö–∞—Ç–∞–ª–æ–≥':                                                                                                   ###  –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è 
        sql      = "select id,`info` from `service` where %s limit %s offset %s"
        limit    = 10
        offset   = 0
        back     = ''
        id_sql   = save_sql     (message_info,"–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤",sql,limit,offset,back)                                               ###  –ú—ã –¥–µ–ª–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ, —Ç–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∏–≤ –Ω–æ–º–µ—Ä –≤—ã–±–æ—Ä–∞, –º–æ–∂–µ–º —Ä–∞—Å—á–∏—Ç–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
        key_list = complite_key (message_info,id_sql,sql,ask,limit,offset,back,'catat')                                             ###  id_sql - –ö–æ–¥ SQL –∑–∞–ø—Ä–æ—Å–∞, –ø–æ —ç—Ç–æ–º—É –∫–æ–¥—É –±—É–¥–µ–º –ø–æ–ª—É—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ, –º–µ—Ç–∫–∞ - –æ–ø–µ—Ä–∞—Ç–æ—Ä –≤ json –ø–∞—Ä–∞–º–µ—Ç—Ä–µ, ask - –æ—Ç–±–æ—Ä –≤—ã–±–æ—Ä–∫–∏
        
def executing_program       (message_info,status_input,setting_bot):
    if callback.find ('i_') != -1:                                                                                                  ###  –ö–Ω–æ–ø–∫–∞ –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–¥–∞–ª–∞ –≤ json –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        executing_program_json (message_info,status_input,setting_bot)
    if callback == 'save_message':                                                                                                  ###  –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥—ã –∫–Ω–æ–ø–∫–∏
        pass

def analis                  (message_info,status_input,setting_bot):
    pass

def save_out_message        (message_info,status_input,setting_bot):
    pass
   
##################################################################################################################################################################################################
   
def start_prog (message_info):                                                                                                      ###  –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ –æ—Ç –±–æ—Ç–∞. –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    status_input = iz_bot.user_get_data    (message_info,get_data)                                                                  ###  –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —Å—Ç–∞—Ç—É—Å—ã. 
    setting_bot  = iz_bot.get_setting      (message_info)                                                                           ###  –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –±–æ—Ç—É. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –¥–∞–Ω–Ω—ã–µ.
    status       = status_input.setdefault ('status','')                                                                            ###  –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–ø—Ä–∏–º–µ—Ä –æ —Ç–æ–º —á—Ç–æ –æ–Ω –≤–≤–æ–¥–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏ –∫–∞–∫–∏–µ
    print_status            (message_info,status_input,setting_bot)                                                                 ###  –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∏ —Å—Ç–∞—Ç—É—Å–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —ç–∫—Ä–∞–Ω 
    executing_admin         (message_info,status_input,setting_bot)                                                                 ###  –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞ 
    testing_double          (message_info,status_input,setting_bot)                                                                 ###  –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞–∂–∞—Ç—ã–µ –∫–ª–∞–≤–∏—à–∏
    testing_blocking        (message_info,status_input,setting_bot)                                                                 ###  –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞–∂–∞—Ç—ã–µ –∫–ª–∞–≤–∏—à–∏
    save_info_refer         (message_info,status_input,setting_bot)                                                                 ###  –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ 
    save_info_user          (message_info,status_input,setting_bot)                                                                 ###  –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–µ–∫—É—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 
    save_message_user       (message_info,status_input,setting_bot)                                                                 ###  –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ö–æ–¥—è—à–∏–µ —Å–æ–æ–±—à–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∏—Ä–æ–≤–∞–Ω–∏—è
    executing_status        (message_info,status_input,setting_bot)                                                                 ###  –í—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞ –¥–µ–π—Å—Ç–≤–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞. –ù–∞–ø—Ä–∏–º–µ—Ä –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
    executing_message       (message_info,status_input,setting_bot)                                                                 ###  –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–¥ –ø—Ä–æ–ø–∏—Å–∞–Ω–Ω—ã–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    executing_program       (message_info,status_input,setting_bot)                                                                 ###  –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–¥ –ø—Ä–æ–ø–∏—Å–∞–Ω–Ω—ã–π –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ
    analis                  (message_info,status_input,setting_bot)                                                                 ###  –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ –µ—Å–ª–∏ –Ω–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    save_out_message        (message_info,status_input,setting_bot)                                                                 ###  –ü—Ä–æ—Ç–æ–∫–æ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è



